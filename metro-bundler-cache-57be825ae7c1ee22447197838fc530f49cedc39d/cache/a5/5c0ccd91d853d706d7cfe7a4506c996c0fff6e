Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = peopleReducer;

var _constants = require('../constants');

var initialState = {
  people: [],
  isFetching: false,
  error: false
};

function peopleReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case _constants.FETCHING_PEOPLE:
      return _extends({}, state, {
        people: [],
        isFetching: true
      });
    case _constants.FETCHING_PEOPLE_SUCCESS:
      return _extends({}, state, {
        isFetching: false,
        people: action.data
      });
    case _constants.FETCHING_PEOPLE_FAILURE:
      return _extends({}, state, {
        isFetching: false,
        error: true
      });
    default:
      return state;
  }
}