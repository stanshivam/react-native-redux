Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.setTab = setTab;
exports.navigate = navigate;
exports.navigateBack = navigateBack;

var _types = require('./types');

var types = _interopRequireWildcard(_types);

var _reactNative = require('react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var NavigationExperimental = _reactNative2.default.NavigationExperimental;
var jumpToIndex = NavigationExperimental.StateUtils.jumpToIndex;
function setTab(tabIndex) {
  return function (dispatch, getState) {
    var _getState = getState(),
        tabs = _getState.tabs;

    dispatch(_extends({ type: types.SET_TAB }, jumpToIndex(tabs, tabIndex)));
  };
}

function navigate(action) {
  return function (dispatch, getState) {
    dispatch(navigateForward(action));
  };
}

function navigateForward(state) {
  return {
    type: types.NAVIGATION_FORWARD,
    state: state
  };
}

function navigateBack() {
  return function (dispatch, getState) {
    dispatch({
      type: types.NAVIGATION_BACK
    });
  };
}