Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.searchedRecipes = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createReducer2 = require('../lib/createReducer');

var _createReducer3 = _interopRequireDefault(_createReducer2);

var _types = require('../actions/types');

var types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var searchedRecipes = exports.searchedRecipes = (0, _createReducer3.default)({}, _defineProperty({}, types.SET_SEARCHED_RECIPES, function (state, action) {
  var newState = {};
  action.recipes.forEach(function (recipe) {
    var id = recipe.href;
    newState[id] = _extends({}, recipe, { id: id });
  });
  return newState;
}));